 3)Given an integer array, Write a program to find if the array has any triplets. A triplet is a
value if it appears 3 consecutive times in the array.
Include a class UserMainCode with a static methodcheckTripplets which accepts an integer
array. The return type is boolean stating whether its a triplet or not.
Create a Class Main which would be used to accept the input arrayand call the static method
present in UserMainCode.

package day3;

import java.util.Scanner;

public class UserMainCode {

	/*public UserMainCode(int a[],int n)
	{
		
	}
	*/
	static boolean checkTriplets(int[] a) //helps report triplets
	{
		
		boolean res=false;
		int a2[]=new int[a.length]; //new array with length of array passed from main
		a2=a;
		int i;
		for(i=0;i<a2.length;i++)
		{
			
			//System.out.println(a2[i]);
			for(int j=i+1;j<a2.length-1;j++)
			if((a2[i]==a2[j]) && (a2[i]==a2[j+1])) //Check the subsequent two elements for the given element
			{
				res=true;
			}
				
		}
		return res;  //returns the state of the array
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
	System.out.println("Enter the number of elements in the array");
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		
	int a[]=new int[n];   
	
	for(int i=0;i<n;i++)
	{
		a[i]=sc.nextInt();
	}
		
	UserMainCode umc=new UserMainCode();
	boolean b=umc.checkTriplets(a);
	
	if(b==true)
	{
		System.out.println("TRUE");
	}
	else 
		System.out.println("FALSE");
	
		
	}

}



==================================================================================================================

Question #1

Develop a calculator application to perform addition, subtraction, multiply and divide two
number based on the choice 1 add 2 sub 3 mul 4 div without using any control statement
like if, else if, case
1) Create an abstract class Arithmetic with has 2 instance variable num1, num2, num3.
Methods to read, and display with the constructor to initialize. Abstract method
calculate
2) Create sub class for addition, subtraction, multiplication and divide and override
calculate method.
3) Create a array of reference for arithmetic class and initialize object of sub call
(addition, subtraction, multiplication and division)
4) Read two numbers and choice perform the calculation base on choice without using
control statement.

package day3;
import java.util.Scanner;

abstract class Arithmetic {   // abstract class from which other subclasses will be derived
int num1, num2, result;
public abstract int calculate(int num1, int num2); 

//returns num1
public int getNumber1() {
return num1;
}

//sets num1
public void setNumber1(int num1) {
this.num1 = num1;
}

//returns num2
public int getNumber2() {
return num2;
}

//sets num2
public void setNumber2(int num2) {
this.num2 = num2;
}
}

package day3;

public class SubclassesForArithmetic {
}
	class Addition extends Arithmetic{     //inherited from Arithmetic
		@Override
		public int calculate(int num1, int num2) {
		result=num1+num2;		//Adding two numbers
		return result;
		}
		}

		class Subtraction extends Arithmetic{   //inherited from Arithmetic
		@Override
		public int calculate(int num1, int num2) {
		result=num1-num2;		//Subtracting two numbers
		return result;
		}
		}

		class Multiplication extends Arithmetic{	//inherited from Arithmetic
		@Override
		public int calculate(int num1, int num2) {
		result=num1*num2;		//Multiplying two numbers
		return result;
		}
		}

		class Division extends Arithmetic{	//inherited from Arithmetic
		@Override
		public int calculate(int num1, int num2) {
		result=num1/num2;			//dividing two numbers
		return result;
		}
		}


package day3;

import java.util.Scanner;

public class Calculation {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		Arithmetic additionObject = new Addition();
		Arithmetic subtractionObject = new Subtraction();
		Arithmetic multiplicationObject = new Multiplication();
		Arithmetic divisionObject = new Division();
  for(;;)
  {
		Arithmetic[] ref = {additionObject, subtractionObject, multiplicationObject, divisionObject}; //array of objects
		int choice;
		System.out.println("1. Addition \n2.Subtraction \n3.Multiplication \n4.Division");
		System.out.println("Enter your choice: ");
		Scanner scanner = new Scanner(System.in);
		choice = scanner.nextInt();
		System.out.println("Enter two numers: ");
		int num1=scanner.nextInt();
		int num2=scanner.nextInt();
		System.out.println("Result is: " + ref[choice-1].calculate(num1, num2)); //calling from the appropriate object
		
  		System.out.println("Enter 1 if you are done using the calculator");
  		Scanner sc = new Scanner(System.in);
  		int repeat = sc.nextInt();
  		if(repeat==1) 			//repeat until the user is done using the calculator
  			break;
	}	
	}}

==================================================================================================================


Question #2

Develop java application to compute income tax of employee based on annual income.
Create class EmplyeeVo which contain instance variable empid, empname, annualincome,
incometax. Create setter and getter methods
Override the following methods:
1) toString method which returns all the employee details.
2) Hashcode method to return the hashcode of the data
3) Equals method to compare the object
4) Add the parameter constructor to add data
Create class EmplyeeBo which contains instance method calincomeTax (), return type is
void, argument is EmplyeeVo. Take the annualincome for emplyeeVo and compute income
tax and store it back to emplyeeVo.
Create class Emplyeesort implement comparator interface and override compareTo method
do sort the data on incometax in descending order.
Create an EmplyeeMain with main method and do the following
1) Accept no of employees
2) Create an array of EmplyeeVo based on number of employees
3) Read empid, empname, annualincome and calculate income tax calling calincomeTax
method of EmplyeeBo object.
4) Display the data of the all the employee

5) Sort the data of the employee based on income tax and re print.  

package day3;

public class EmplyeeVo {
//instance variables w
private int empid;
private String empname;
private double annualincome;
private double incometax;


public int getEmpid() {
return empid;
}
public void setEmpid(int empid) {
this.empid = empid;
}
public String getEmpname() {
return empname;
}
public void setEmpname(String empname) {
this.empname = empname;
}
public double getAnnualincome() {
return annualincome;
}
public void setAnnualincome(double annualincome) {
this.annualincome = annualincome;
}
public double getIncometax() {
return incometax;
}
public void setIncometax(double incometax) {
this.incometax = incometax;
}
@Override
public int hashCode() {
final int prime = 31;
int result = 1;
long temp;
temp = Double.doubleToLongBits(annualincome);
result = prime * result + (int) (temp ^ (temp >>> 32));
result = prime * result + empid;
result = prime * result + ((empname == null) ? 0 : empname.hashCode());
temp = Double.doubleToLongBits(incometax);
result = prime * result + (int) (temp ^ (temp >>> 32));
return result;
}
@Override
public boolean equals(Object obj) {
if (this == obj)
return true;
if (obj == null)
return false;
if (getClass() != obj.getClass())
return false;
EmplyeeVo other = (EmplyeeVo) obj;
if (Double.doubleToLongBits(annualincome) != Double.doubleToLongBits(other.annualincome))
return false;
if (empid != other.empid)
return false;
if (empname == null) {
if (other.empname != null)
return false;
} else if (!empname.equals(other.empname))
return false;
if (Double.doubleToLongBits(incometax) != Double.doubleToLongBits(other.incometax))
return false;
return true;
}
public EmplyeeVo(int empid, String empname, double annualincome, double incometax) {
super();
this.empid = empid;
this.empname = empname;
this.annualincome = annualincome;
this.incometax = incometax;
}


}



package day3;

public class EmplyeeBo {
public static void calincomeTax(EmplyeeVo e)
{
double income = e.getAnnualincome();


if(income<=250000)
{
e.setIncometax(0);
}
else if(income>250000 && income<=500000)
{

e.setIncometax(0.05*income);
}
else if(income>500000 && income<=1000000)
{
e.setIncometax(0.2*income);

}
else
{
e.setIncometax(0.3*income);
}


}
}


package day3;

import java.util.Scanner;

import Day6.Arraydemo;

public class EmplyeeMain  {

public static void main(String[] args) {

Scanner sc = new Scanner(System.in);
System.out.println("enter the number of employees");
int noe = sc.nextInt(); //number of employees

EmplyeeVo [] e = new EmplyeeVo[noe];
for(int i=0;i<e.length;i++)
{
e[i]= new EmplyeeVo(i, null, i, i);
}

EmplyeeVo f = new EmplyeeVo(noe, null, noe, noe);


for (int i = 0; i <e.length; i++) {
System.out.println("enter employee id of employee "+(i+1));
int t = sc.nextInt();
e[i].setEmpid(t);
System.out.println("enter employee name of employee "+(i+1));
e[i].setEmpname(sc.next());
System.out.println("enter employee annual income of employee "+(i+1));
e[i].setAnnualincome(sc.nextDouble());

EmplyeeBo.calincomeTax(e[i]);
System.out.println("all the data of employee"+(i+1)+"are entered");

}

for (int i = 0; i < e.length; i++) {
System.out.println("employee id of employee " +(i+1)+"is "+e[i].getEmpid());
System.out.println("employee name of employee " +(i+1)+"is "+e[i].getEmpname());
System.out.println("annual income of employee " +(i+1)+"is "+e[i].getAnnualincome());
System.out.println("income tax of employee " +(i+1)+"is "+e[i].getIncometax());
}

for (int  i= 0; i < e.length; i++) {
for (int j = i+1; j < e.length; j++) {
if(e[i].getIncometax()<e[j].getIncometax())
{
f  = e[i];
e[i]=e[j];
e[j]=f;
}
}

}
System.out.println("the sorted array is ");
for (int i = 0; i < e.length; i++) {
System.out.println("employee id of employee " +(i+1)+"is "+e[i].getEmpid());
System.out.println("employee name of employee " +(i+1)+"is "+e[i].getEmpname());
System.out.println("annual income of employee " +(i+1)+"is "+e[i].getAnnualincome());
System.out.println("income tax of employee " +(i+1)+"is "+e[i].getIncometax());
}





}

}